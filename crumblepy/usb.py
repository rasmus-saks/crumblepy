import hid

# Minimum required code to run a program on the Crumble controller

hex_data = [':10200000113490310528FF3FFF3F90313728903140',
            ':10201000132890311E289031252890311C28FF3F2D',
            ':10202000CB0090312C28F0308600213087004531DC',
            ':102030000108003A031908009731052FF530860092',
            ':1020400021308700013081000800F0308600213007',
            ':1020500087004531810108004B08840004300402E8',
            ':102060000318080090310435073E82000800200064',
            ':1020700039282500D000F030BC209031F0308600A7',
            ':102080002130870045318101D1015108CC00F63063',
            ':10209000CD01CE002130B420903160308101D10AD1',
            ':1020A0005102031C45285D308600233087008101E2',
            ':1020B000D1015108CC005E30CD01CC35CD0DCE0024',
            ':1020C0002330B42090310030C03FC13F0430D10AEA',
            ':1020D0005102031C592866308600233087000F30D8',
            ':1020E000810121008E04F03022008E0521009E1710',
            ':1020F0001E088F3960389E0022001D1521008C16A5',
            ':102100008E162C0093019601BB3020009B002C0002',
            ':1021100092019101950194012000911003309C04DB',
            ':102120001C152C00931796172000911C9428210051',
            ':102130008C128E122C00131716173F3020009805B2',
            ':102140001808CF39203898001814563086002230ED',
            ':102150008700573081018600F0308101BC202500C6',
            ':102160005008903110280800CF004C084E07860018',
            ':102170004D084F3D87000800860021308700003061',
            ':102180004131C03FC13F080095311A2590312500EB',
            ':10219000B600563074249531012590319431C52410',
            ':1021A0009031803F413F813F9631852E56308600E9',
            ':1021B0002230870094318724903174249531012591',
            ':1021C00090319431C52490310007BE000131413F68',
            ':1021D000003DBF0095311A25903195316F25903122',
            ':1021E000D4285630860022308700943187249031DD',
            ':1021F00074249531012590319431C5249031000229',
            ':10220000BE000131413F003BBF0095311A2590319E',
            ':1022100095316F259031D42894318D2490318103EC',
            ':10222000812490317424403FA000413FA1009531AA',
            ':102230001A259031BA005A30953106259031A20006',
            ':10224000413FA3009731E427903195311A25903111',
            ':102250009531452590312008C03F2108C13FD42841',
            ':1022600056308600223087009431872490317424C0',
            ':10227000403FA000413FA10095311A259031BA009E',
            ':102280005830953106259031A200413FA3009B3183',
            ':10229000C023903195311A259031953145259031E3',
            ':1022A0002008C03F2108C13FD42894318D249031AB',
            ':1022B0008103812490317424403FAC00413FAD0044',
            ':1022C00095311A259031BA005A3095310625903152',
            ':1022D000AE00413FAF009531B125903195311A25BF',
            ':1022E00090319531452590312C08C03F2D08C13FD4',
            ':1022F000D4285630860022308700943187249031CC',
            ':102300007424943193249031403FC000413F953173',
            ':102310008F259031031C9929563086002230870082',
            ':1023200081249031742490310130C03F0030C13F8E',
            ':10233000D4285630860022308700812490317424BE',
            ':1023400090310030C03FC13FD42894318D2490316A',
            ':102350008103812490317424403F9431AB24903127',
            ':10236000CB2994318D2490318103812490317424C0',
            ':10237000403F9431AB24903187295630860022307B',
            ':1023800087009431872490317424943193249031C0',
            ':10239000403FC000413F95318F259031031C8C296F',
            ':1023A0009929563086002230870094318724903155',
            ':1023B0007424943193249031403F3A06031D7C2AC3',
            ':1023C000413F3B067C2AF030953154259031C800BE',
            ':1023D000C9019B319123903195313525F03086002C',
            ':1023E0002130870041314808C03F4908C13F0800FB',
            ':1023F000953182259031953154259031C800C9011D',
            ':102400009B319123903195313525903195311A25A5',
            ':102410009031B60058307424903116000104031D29',
            ':102420000800EE299531822590319531542590315F',
            ':10243000C800C9019B3191239031953135259031E8',
            ':1024400095311A259031B600583074249031160019',
            ':10245000010403190800EE29563086002230870057',
            ':1024600094318724903174249431932490313A0824',
            ':10247000810541313B088105D42856308600223041',
            ':1024800087009431872490317424943193249031BF',
            ':102490003A08810441313B088104D42894318D24C9',
            ':1024A0009031812490317424903116000104031D71',
            ':1024B00099298C2995312025903195311425903119',
            ':1024C0009431EE249031CA004A0923008E0525007C',
            ':1024D0004A0821008E042500C401C70108304702C4',
            ':1024E00003187A2A20000E0825004A05031DC40A95',
            ':1024F000C70A6E2A4408083A03198C29992995318C',
            ':102500002025903181039531142590319431EE24AA',
            ':102510009031CA0095311A259031B6005A30742492',
            ':102520009031160001040319992A4A0822008E04EA',
            ':102530009C2A4A0922008E0525004A0921008E05A1',
            ':102540000800953120259031953114259031943132',
            ':10255000EE249031CA0021008E0425004A08230091',
            ':102560008E0427302500B600B60BB42A0032563050',
            ':102570008600223087008124903174249031010834',
            ':1025800009070907103E033821009D009D18C62A3F',
            ':102590005630860022308700812490317424903197',
            ':1025A00021001B08C03F1C08C13FD42894318D2452',
            ':1025B0009031812490317424903101082C009500D1',
            ':1025C0005630860022308700812490317424903167',
            ':1025D000403FBA00413FBB00BB1BF12A22000C1256',
            ':1025E000080022000C162C009509950A0800943169',
            ':1025F0008D249031812490317424903101082C0075',
            ':102600009200563086002230870081249031742455',
            ':102610009031403FBA00413FBB00BB1B122B220050',
            ':102620000E16080022000E122C009209920A0800D1',
            ':102630005630860022308700043081028124903198',
            ':102640007424403FA000413FA1000330A200A30139',
            ':102650009731E42790312108C9002008C8000030D4',
            ':102660004902603003194802031C392B5F30C8004F',
            ':10267000C90195311A259031B6005C3074240108E7',
            ':10268000BA00F63095312525903195311A259031D3',
            ':10269000B6005A3074240108BA00F7309531252568',
            ':1026A000903195311A259031B6005E3074240108BE',
            ':1026B000BA00F83095312525080021000E112200BE',
            ':1026C0000E11F6302500A0002130A1006030A200DC',
            ':1026D0009B3164235830860023308700013081000D',
            ':1026E000080094318D249031810381249031742429',
            ':1026F0000108C7000330C70595311A259031B6008F',
            ':102700005A3074249031403FBA00413FBB003A0830',
            ':10271000BC001F303B05BD004708BE005E30BF0156',
            ':10272000BE35BF0DC0002330C1003E084007860003',
            ':102730003F08413D87003C08C03F3D08C13F5D3038',
            ':102740008600233087000130B600470AA82BB63533',
            ':10275000890BA72B3608810408009531202590317C',
            ':1027600081039531142590319431EE249031BB00D2',
            ':1027700067309531A72590310130B60095311A2583',
            ':102780009031B7005A309431EE249031BB0068305C',
            ':102790009531A72566308600013081000800AE30F3',
            ':1027A0002500A0006930A101860023308700403F4A',
            ':1027B000A200413FA3009B313F23903195311A2560',
            ':1027C0009031B6005830742490312008C03F210861',
            ':1027D000C13FD4282000911CEA2B91100800F03052',
            ':1027E000860021308700F03045318101860021309C',
            ':1027F000870001304131810200304131813B7F311E',
            ':102800000800F03086002130870043310108003A8B',
            ':1028100096310319712E013A0319872E033A0319D1',
            ':10282000AB2E013A0319CC2E073A0319DD2E903155',
            ':10283000013A0319852C033A0319C4280E3A0319E7',
            ':10284000D628013A0319F128033A03190C29013A51',
            ':1028500003193029073A031955291C3A0319792914',
            ':10286000013A0319A529033A0319B129013A0319B9',
            ':10287000BD29073A0319D1290C3A0319E329013A72',
            ':102880000319F829033A0319122A3A3A03192C2A90',
            ':10289000023A03194E2A013A03193D2A0B3A031949',
            ':1028A0005A2A013A03197F2A033A0319A12A1A3A2C',
            ':1028B0000319D62A013A0319F72A033A0319182BE8',
            ':1028C000013A03195D2B073A0319EA2B023A03195F',
            ':1028D000712B013A0319AD2B0F3A0319CF2B073A8D',
            ':1028E0000319EF2B732C0800B701B635B70DB800EC',
            ':1028F0002230B9003608380786003708393D87008E',
            ':10290000080001082500B60058349731022F8103D2',
            ':10291000810301082500B6005A3456308600223063',
            ':10292000870081030800403FBA00413FBB0056309A',
            ':102930008600223087000108BC005830BD01BC353C',
            ':10294000BD0DBE002230BF003C083E0786003D089A',
            ':102950003F3D87000800BA00413FBB00563086006B',
            ':10296000223087000108BC005A30BD01BC35BD0DC6',
            ':10297000BE002230BF003C083E0786003D083F3DB8',
            ':102980008700403FC000413F08000008BA005830AF',
            ':10299000BB01BA35BB0DBC002230BD003A083C0774',
            ':1029A00084003B083D3D8500403F08008600233001',
            ':1029B0008700403FB600413FB70045083607B800E2',
            ':1029C0004608373DB9002000170825003902031DCD',
            ':1029D000080020001608250038020800B801B735A5',
            ':1029E000B80DB9002230BA00370839078600380818',
            ':1029F0003A3D8700010AFD2CB635890BFC2C3608C0',
            ':102A0000080056308400223085000800BB01BA352A',
            ':102A1000BB0DBC002230BD003A083C0786003B08D5',
            ':102A20003D3D8700403F080081032500B6000108B6',
            ':102A3000B70058345630860022308700010808005D',
            ':102A400056308600223087000134BB002130BC00A4',
            ':102A500048083B07BD0049083C3DBE003D088600D4',
            ':102A60003E0887003A0881000800F03086002130D7',
            ':102A70008700443101082500B600B701B700B60150',
            ':102A80003608C8043708C9040800BE005830BF0122',
            ':102A9000BE35BF0DC0002230C1003E084007860091',
            ':102AA0003F08413D870008008600213087004431FF',
            ':102AB0000108250008008600223087000108B800C0',
            ':102AC0005830B901B835B90DBA002230BB0038080A',
            ':102AD0003A07860039083B3D870036080800C000E9',
            ':102AE0005830C101C035C10DC2002230C3004008BA',
            ':102AF000420786004108433D87003E08C03F3F082B',
            ':102B0000C13F08005630860022308700F030810334',
            ':102B100008005630860022308700810A0800C10074',
            ':102B20004108803AC2003B08803A4202031D080077',
            ':102B30003A0840020800F03084002130850004315A',
            ':102B400008006630860023308700010808008600F0',
            ':102B5000233087003B0881000800803F413F813FD0',
            ':102B600008002F08B5002E08B4002C08B4022D0868',
            ':102B7000B53BB40A0319B50A5F30B000F330B100B9',
            ':102B80006E30B2003C30B3005930860023308700ED',
            ':102B9000403FA000413FA100423FA200433FA300AD',
            ':102BA0001930A701A6006630A5000D30A40011263B',
            ':102BB00095312008B0072108B13D2208B23D230815',
            ':102BC000B33D59308600233087003008C03F3108BC',
            ':102BD000C13F3208C23F3308C33F3408A000350864',
            ':102BE000A100A201A301403FB000413FB100423F1C',
            ':102BF000B200433FB3003208B0003308B100B20165',
            ':102C0000B3013308A7003208A6003108A500300838',
            ':102C1000A40036262C082007AC002D08213DAD006D',
            ':102C20000800A801A901AA01AB01201C1F2E24083D',
            ':102C3000A8072508A93D2608AA3D2708AB3DA435CD',
            ':102C4000A50DA60DA70DA336A20CA10CA00C230860',
            ':102C5000220421042004031D152E2B08A3002A089A',
            ':102C6000A2002908A1002808A000080023082204C7',
            ':102C7000210420040319632EA801A80AA31B452ED2',
            ':102C8000A035A10DA20DA30D3D2E23082702031D83',
            ':102C9000532E22082602031D532E21082502031D50',
            ':102CA000532E20082402031C5D2E2008A4022108B4',
            ':102CB000A53B2208A63B2308A73BA336A20CA10CE8',
            ':102CC000A00CA80B452E2708A3002608A200250863',
            ':102CD000A1002408A00008009B3191239631943173',
            ':102CE000012CF0308600213087004431943181245A',
            ':102CF0009631943174249631953101259631943171',
            ':102D0000C5249631803F413F813F9531892DF03078',
            ':102D100086002130870057304431840022308500FE',
            ':102D2000000801072500B6005830B701B70DB635C9',
            ':102D3000B70DB8002230B9003608380786003708CA',
            ':102D4000393D8700563084009431C5249631803F48',
            ':102D5000413F813F852EF030953154259631B600A4',
            ':102D60005630B70195315B259631C03F3708C13FDA',
            ':102D70009B3191239631F030953154259631B60030',
            ':102D8000B701B7005630B60195315B259631810405',
            ':102D9000413137088104852E94318D249631943148',
            ':102DA0008124963194317424963195319B25963146',
            ':102DB0009431C52496319531AD2D94318D249631C1',
            ':102DC00094318124963194317424963195319B2528',
            ':102DD00096310008BA005730840022308500000880',
            ':102DE0003A07BB005830BC01BC0DBB35BC0DBD0063',
            ':102DF0002230BE003B083D0784003C083E3D850074',
            ':102E0000403FDB2E94318D2408002C0091012000DE',
            ':102E1000111C8E2F5D308600233087000108003A98',
            ':102E20000319582F17082500C60020001608250092',
            ':102E3000C5005D308600010921008E0501082200D1',
            ':102E40008E0401082500CA00CA080319582F4A1C1D',
            ':102E5000332F5E309431D62497310318332F22005C',
            ':102E60000E1025004A10CA1C3F2F60309431D62422',
            ':102E7000973103183F2F22008E102500CA104A1DDB',
            ':102E80004B2F62309431D624973103184B2F2200F8',
            ':102E90000E1125004A11CA1D242F64309431D62406',
            ':102EA00097310318242F22008E112500CA11242FD8',
            ':102EB0006630860023308700010B902F6730860034',
            ':102EC000010922008E05010921008E052730250009',
            ':102ED000B600B60B692F00326730860023308700BA',
            ':102EE000010822008E0427302500B600B60B762F8D',
            ':102EF00000326730860023308700010922008E05EA',
            ':102F000068308600010923008E05010821008E0427',
            ':102F100066308600023081009731A22F9731A42FAE',
            ':102F20009731922F663086002330870002300102ED',
            ':102F3000031CA22F66308600693081018600FF30B5',
            ':102F4000C03FC13F2000111066308600233087004B',
            ':102F5000010BAB2F08009531A1259731023A031DD3',
            ':102F6000C22F6830860001080E0503190800693079',
            ':102F700086001608C03F1708C13F66308600033040',
            ':102F8000810008009531A1259731033A031DE22FF6',
            ':102F9000683086000E0901050319080069308600B3',
            ':102FA000403F16022500B600413F2000173B250098',
            ':102FB000B7003608C03F3708C13F6630860023306F',
            ':102FC0008101080096316C2EA401A501201CEC2F74',
            ':102FD0002208A4072308A53DA235A30DA136A00C05',
            ':102FE00021082004031DE62F2508A1002408A000C5',
            ':102FF0000800FF3FFF3FFF3FFF3FFF3FFF3FFF3F17',
            ':10367000FF3FFF3FFF3FFF3FFF3FFF3FFF3FA401F3',
            ':10368000A5012108200403195F2BA601A60AA11B8E',
            ':103690004C2BA035A10D462BA435A50D21082302E6',
            ':1036A000031D542B20082202031C5B2B2008A202BE',
            ':1036B0002108A33B2414A136A00CA60B4C2B2508F3',
            ':1036C000A1002408A000080022082000FB00803090',
            ':1036D000FC0007082500A4000608A30021088700B5',
            ':1036E000200886000308FD000001013E22000E159F',
            ':1036F00001087C0503190E11FC0CFC080319842B2E',
            ':1037000000000E110000772B0E114131FC0CFB0B59',
            ':10371000772B7D0883002500240887002308860076',
            ':103720000800F0308600213087004131403F2500FD',
            ':10373000A000413FA1002008003EA2001C30213D16',
            ':10374000A3002208230091002500230823009200F3',
            ':103750001513151400000000F33086002130870097',
            ':10376000230014088100F430860013088100F03033',
            ':10377000860001304131810741310318810A080078',
            ':10378000A501A11FCA2BA009A109A00A0319A10A1A',
            ':10379000A501A50AA31FD32BA209A309A20A0319F5',
            ':1037A000A30A0130A506A601A701210820040319D8',
            ':1037B000F32BA401A40AA11BE02BA035A10DDA2B49',
            ':1037C000A635A70D21082302031DE82B200822029D',
            ':1037D000031CEF2B2008A2022108A33B2614A136CC',
            ':1037E000A00CA40BE02B25080319FB2BA609A709A5',
            ':1037F000A60A0319A70A2708A1002608A0000800A6',
            ':00000001FF',
            ]

VERSION_CMD = 0
READ_CMD = 1
ERASE_CMD = 2
WRITE_CMD = 3
INIT_CMD = 4
SEND_VM_CMD_CMD = 5
READ_RAM_CMD = 6
WRITE_RAM_CMD = 7

VM_POLL = 0
VM_START = 1
VM_STOP = 2
VM_STEP = 3

VM_START_ADDRESS = 0x1000
BYTE_CODE_START = 0x1C00
BYTE_CODE_LENGTH = 1024

VENDOR_ID = 0x1C40
PRODUCT_ID = 0x05B8

device = hid.device()
connected = False


def connect():
    """Attempt to connect to HID."""
    global connected
    try:
        device.open(VENDOR_ID, PRODUCT_ID)
    except IOError:
        connected = False
        raise
    else:
        connected = True


def write(data):
    """Writes data to HID.
    data -- list of bytes."""
    global connected
    if not connected:
        connect()
    if connected:
        try:  # Can optimize to just catch exception when only using hidapi via ctypes
            result = device.write([0] + data)
        except IOError:
            result = -1
        if result == -1:
            connected = False
        return result
    else:
        return -1


def read(length):
    """Read data from HID.
    Returns data as list of bytes."""
    global connected
    if not connected:
        connect()
    if connected:
        try:  # Can optimize to just catch exception when only using hidapi via ctypes
            data = device.read(length)
        except IOError:
            data = []
        if not data:
            connected = False
            return []
        else:
            return data[0:length]
    else:
        return []


def init_vm():
    """Resets the VM state."""
    write([INIT_CMD, VM_STOP])
    rx_data = read(64)
    # print 'VM initialisation success:', rx_data[0]


def stop_vm():
    """Stop the VM running."""
    send_vm_command(VM_STOP)


def send_vm_command(command):
    """Sends a command directly to the VM."""
    write([SEND_VM_CMD_CMD, command])
    rx_data = read(64)
    # print 'Command send success:', rx_data[0]


def program_hex(hex_data, first_page_only=False):
    """Reads from list of hex strings and programs flash."""
    page_size = 32  # Page size words
    data = {}
    for line in hex_data:
        num_bytes = int(line[1:3], 16)
        address = int(line[3:7], 16) // 2
        type = int(line[7:9], 16)

        if num_bytes > 0 and type == 0:
            for i in range(9, 9 + num_bytes * 2, 4):
                page_address = address & ~(page_size - 1)
                if page_address not in data:
                    data[page_address] = [0x3FFF] * page_size
                data[page_address][address - page_address] = int(line[i + 2:i + 4] + line[i:i + 2], 16)
                address += 1

    if first_page_only:
        for page_address in list(data.keys()):
            if page_address != VM_START_ADDRESS:
                del (data[page_address])

    # Erase all memory first (to avoid leaving broken VM)
    for page_address in sorted(data.keys()):
        erase_flash_row(page_address)

    # Program hex in reverse (VM version then gets programmed last, so Crumble wont start if incomplete)
    for page_address in sorted(list(data.keys()), reverse=True):
        for address in sorted(list(range(page_address, page_address + page_size, 16)), reverse=True):
            write_flash(address, data[page_address][address - page_address:address - page_address + 16])


def erase_flash_row(address):
    """Erase flash row (32 words) containing address."""
    tx_data = [ERASE_CMD,
               address & 0xFF,
               (address >> 8) & 0xFF]
    write(tx_data)
    rx_data = read(64)


#         print 'Erase success:', rx_data[0], address & 0xFF, (address>>8) & 0xFF
def erase_vm_first_page():
    erase_flash_row(VM_START_ADDRESS)


def write_flash(address, data):
    """Write flash data.
    address -- word address.
    data -- list of words."""
    tx_data = [WRITE_CMD,
               address & 0xFF,
               (address >> 8) & 0xFF,
               len(data)]

    for w in data:
        tx_data += [w & 0xFF, (w >> 8) & 0xFF]

    write(tx_data)
    rx_data = read(64)


def read_ram(address, length):
    """Read vm ram.
    address -- Address of first byte.
    length -- Number of bytes to read
    Returns data as list of bytes."""
    tx_data = [READ_RAM_CMD,
               address & 0xFF,
               (address >> 8) & 0xFF,
               length]

    write(tx_data)
    rx_data = read(length)
    return rx_data


def read_flash(address, length):
    """Read flash data.
    address -- Address of first word.
    length -- Number of words to read
    Returns data as list of words."""
    tx_data = [READ_CMD,
               address & 0xFF,
               (address >> 8) & 0xFF,
               length]
    write(tx_data)
    rx_data = read(64)
    data = []
    for i in range(0, len(rx_data), 2):
        data.append(rx_data[i] + (rx_data[i + 1] << 8))
    return data[:length]


def read_vm_version():
    """Read VM version from flash."""
    data = read_flash(0x1000, 1)
    if data:
        return data[0] & 0xFF
    else:
        return -1


# print 'Write success:', rx_data[0]
def write_byte_code(byte_code):
    """Write byte code to flash."""
    if len(byte_code) > BYTE_CODE_LENGTH:
        raise IOError('Trying to write byte code that is too large.')

    width = 16
    r = len(byte_code) % width
    if r:
        byte_code += [0x3FFF] * (width - r)

    current_row = -1
    address = BYTE_CODE_START

    for i in range(0, len(byte_code), width):
        if address & ~0x001F != current_row:
            current_row = address & ~0x001F
            erase_flash_row(current_row)
        write_flash(address, byte_code[i:i + width])
        address += width


def send_byte_code(byte_code):
    connect()  # Connect to the Crumble USB device
    read_vm_version()
    erase_vm_first_page()
    write_byte_code(byte_code)  # Send the byte code
    program_hex(hex_data)  # ?
    init_vm()
    send_vm_command(VM_START)  # Start the VM. Runs the script we sent
